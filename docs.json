{
	"id": 0,
	"name": "@sern/handler",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [	
		{
			"id": 7,
			"name": "Sern",
			"kind": 4,
			"kindString": "Namespace",
			"flags": {},
			"children": [
				{
					"id": 15,
					"name": "commandModule",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "src/handler/sern.ts",
							"line": 86,
							"character": 16,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L86"
						}
					],
					"target": 4
				},
				{
					"id": 16,
					"name": "eventModule",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "src/handler/sern.ts",
							"line": 107,
							"character": 16,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L107"
						}
					],
					"target": 1
				},
				{
					"id": 17,
					"name": "controller",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The object passed into every plugin to control a command's behavior"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/sern.ts",
							"line": 77,
							"character": 13,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L77"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 18,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 19,
									"name": "next",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/sern.ts",
											"line": 78,
											"character": 4,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L78"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 20,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/sern.ts",
													"line": 78,
													"character": 10,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L78"
												}
											],
											"signatures": [
												{
													"id": 21,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "OkImpl",
														"qualifiedName": "OkImpl",
														"package": "ts-results"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 22,
									"name": "stop",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/sern.ts",
											"line": 79,
											"character": 4,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L79"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 23,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/sern.ts",
													"line": 79,
													"character": 10,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L79"
												}
											],
											"signatures": [
												{
													"id": 24,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "ErrImpl",
														"qualifiedName": "ErrImpl",
														"package": "ts-results"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19,
										22
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/sern.ts",
									"line": 77,
									"character": 26,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L77"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 11,
					"name": "addExternal",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/handler/sern.ts",
							"line": 67,
							"character": 16,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L67"
						}
					],
					"signatures": [
						{
							"id": 12,
							"name": "addExternal",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts title=\"src/index.ts\"\n//Add this before initiating Sern!\nSern.addExternal(new Level())\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts title=\"events/level.ts\"\n export default eventModule({\n     emitter: 'Level',\n     type : EventType.External,\n     name: 'error',\n     execute(args) {\n         console.log(args)\n     }\n })\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 13,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "__module",
										"qualifiedName": "EventEmitter",
										"package": "@types/node"
									}
								}
							],
							"parameters": [
								{
									"id": 14,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any external event emitter.\nThe object will be stored in a map, and then fetched by the name of the instance's class.\nAs there are infinite possibilities to adding external event emitters,\nMost types aren't provided and are as narrow as possibly can."
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 13,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 8,
					"name": "init",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "src/handler/sern.ts",
							"line": 34,
							"character": 16,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L34"
						}
					],
					"signatures": [
						{
							"id": 9,
							"name": "init",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts title=\"src/index.ts\"\nSern.init({\n    client,\n    defaultPrefix: '!',\n    commands: 'dist/commands',\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 10,
									"name": "wrapper",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to pass into sern.\nFunction to start the handler up"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 265,
										"name": "Wrapper"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						15,
						16
					]
				},
				{
					"title": "Variables",
					"children": [
						17
					]
				},
				{
					"title": "Functions",
					"children": [
						11,
						8
					]
				}
			],
			"sources": [
				{
					"fileName": "src/handler/sern.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L1"
				}
			]
		},
		{
			"id": 295,
			"name": "CommandType",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nexport default commandModule({\n    // highlight-next-line\n    type : CommandType.Text,\n    name : 'a text command'\n    execute(message) {\n        console.log(message.content)\n    }\n})\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 298,
					"name": "Both",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CommandType for hybrid commands, text and slash"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L27"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 301,
					"name": "Button",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CommandType for ButtonInteraction commands"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L39"
						}
					],
					"type": {
						"type": "literal",
						"value": 16
					}
				},
				{
					"id": 300,
					"name": "MenuMsg",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CommandType for MessageContextMenuInteraction commands"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L35"
						}
					],
					"type": {
						"type": "literal",
						"value": 8
					}
				},
				{
					"id": 302,
					"name": "MenuSelect",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CommandType for SelectMenuInteraction commands"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L43"
						}
					],
					"type": {
						"type": "literal",
						"value": 32
					}
				},
				{
					"id": 299,
					"name": "MenuUser",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CommandType for UserContextMenuInteraction commands"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 31,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L31"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				},
				{
					"id": 303,
					"name": "Modal",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CommandType for ModalSubmitInteraction commands"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L47"
						}
					],
					"type": {
						"type": "literal",
						"value": 64
					}
				},
				{
					"id": 297,
					"name": "Slash",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CommandType for slash commands"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L23"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 296,
					"name": "Text",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CommandType for text commands"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L19"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						298,
						301,
						300,
						302,
						299,
						303,
						297,
						296
					]
				}
			],
			"sources": [
				{
					"fileName": "src/handler/structures/enums.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L15"
				}
			]
		},
		{
			"id": 304,
			"name": "EventType",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nexport default eventModule({\n    //highlight-next-line\n    type : EventType.Discord,\n    name : 'guildMemberAdd'\n    execute(member : GuildMember) {\n        console.log(member)\n    }\n})\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 305,
					"name": "Discord",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EventType for handling discord events"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 68,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L68"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 307,
					"name": "External",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EventType for handling external events.\nCould be for example, "
							},
							{
								"kind": "code",
								"text": "`process`"
							},
							{
								"kind": "text",
								"text": " events, database events"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 77,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L77"
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 306,
					"name": "Sern",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EventType for handling sern events"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 72,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L72"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						305,
						307,
						306
					]
				}
			],
			"sources": [
				{
					"fileName": "src/handler/structures/enums.ts",
					"line": 64,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L64"
				}
			]
		},
		{
			"id": 311,
			"name": "PayloadType",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"children": [
				{
					"id": 313,
					"name": "Failure",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The PayloadType for a SernEmitter failure event"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 114,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L114"
						}
					],
					"type": {
						"type": "literal",
						"value": "failure"
					}
				},
				{
					"id": 312,
					"name": "Success",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The PayloadType for a SernEmitter success event"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 110,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L110"
						}
					],
					"type": {
						"type": "literal",
						"value": "success"
					}
				},
				{
					"id": 314,
					"name": "Warning",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The PayloadType for a SernEmitter warning event"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 118,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L118"
						}
					],
					"type": {
						"type": "literal",
						"value": "warning"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						313,
						312,
						314
					]
				}
			],
			"sources": [
				{
					"fileName": "src/handler/structures/enums.ts",
					"line": 106,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L106"
				}
			]
		},
		{
			"id": 308,
			"name": "PluginType",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nexport default function myPlugin() : EventPlugin<CommandType.Text> {\n    //highlight-next-line\n    type : PluginType.Event,\n    execute([ctx, args], controller) {\n        return controller.next();\n    }\n}\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 309,
					"name": "Command",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The PluginType for CommandPlugins"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 97,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L97"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 310,
					"name": "Event",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The PluginType for EventPlugins"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/handler/structures/enums.ts",
							"line": 101,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L101"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						309,
						310
					]
				}
			],
			"sources": [
				{
					"fileName": "src/handler/structures/enums.ts",
					"line": 93,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/enums.ts#L93"
				}
			]
		},
		{
			"id": 195,
			"name": "Context",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Provides values shared between\r\nMessage and ChatInputCommandInteraction"
					}
				]
			},
			"children": [
				{
					"id": 199,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 32,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L32"
						}
					],
					"signatures": [
						{
							"id": 200,
							"name": "new Context",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 201,
									"name": "oMsg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Message",
												"qualifiedName": "Message",
												"package": "discord.js"
											}
										],
										"name": "Option",
										"qualifiedName": "Option",
										"package": "ts-results"
									},
									"defaultValue": "None"
								},
								{
									"id": 202,
									"name": "oInterac",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "CacheType",
														"qualifiedName": "CacheType",
														"package": "discord.js"
													}
												],
												"name": "ChatInputCommandInteraction",
												"qualifiedName": "ChatInputCommandInteraction",
												"package": "discord.js"
											}
										],
										"name": "Option",
										"qualifiedName": "Option",
										"package": "ts-results"
									},
									"defaultValue": "None"
								}
							],
							"type": {
								"type": "reference",
								"id": 195,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 209,
					"name": "channel",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 68,
							"character": 15,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L68"
						}
					],
					"getSignature": {
						"id": 210,
						"name": "channel",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"id": 142,
							"typeArguments": [
								{
									"type": "reference",
									"name": "TextBasedChannel",
									"qualifiedName": "TextBasedChannel",
									"package": "discord.js"
								}
							],
							"name": "Nullish"
						}
					}
				},
				{
					"id": 221,
					"name": "client",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 119,
							"character": 15,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L119"
						}
					],
					"getSignature": {
						"id": 222,
						"name": "client",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "boolean"
								}
							],
							"name": "Client",
							"qualifiedName": "Client",
							"package": "discord.js"
						}
					}
				},
				{
					"id": 213,
					"name": "createdTimestamp",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 84,
							"character": 15,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L84"
						}
					],
					"getSignature": {
						"id": 214,
						"name": "createdTimestamp",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 215,
					"name": "guild",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 92,
							"character": 15,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L92"
						}
					],
					"getSignature": {
						"id": 216,
						"name": "guild",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "Guild",
							"qualifiedName": "Guild",
							"package": "discord.js"
						}
					}
				},
				{
					"id": 217,
					"name": "guildId",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 100,
							"character": 15,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L100"
						}
					],
					"getSignature": {
						"id": 218,
						"name": "guildId",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 207,
					"name": "id",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 60,
							"character": 15,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L60"
						}
					],
					"getSignature": {
						"id": 208,
						"name": "id",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 223,
					"name": "inGuild",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 127,
							"character": 15,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L127"
						}
					],
					"getSignature": {
						"id": 224,
						"name": "inGuild",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 205,
					"name": "interaction",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 55,
							"character": 15,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L55"
						}
					],
					"getSignature": {
						"id": 206,
						"name": "interaction",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Getting the ChatInputCommandInteraction object. Crashes if module type is\r\nCommandType.Text or the event fired in a Both command was\r\nMessage"
								}
							]
						},
						"type": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "CacheType",
									"qualifiedName": "CacheType",
									"package": "discord.js"
								}
							],
							"name": "ChatInputCommandInteraction",
							"qualifiedName": "ChatInputCommandInteraction",
							"package": "discord.js"
						}
					}
				},
				{
					"id": 219,
					"name": "member",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 111,
							"character": 15,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L111"
						}
					],
					"getSignature": {
						"id": 220,
						"name": "member",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"id": 142,
							"typeArguments": [
								{
									"type": "union",
									"types": [
										{
											"type": "reference",
											"name": "GuildMember",
											"qualifiedName": "GuildMember",
											"package": "discord.js"
										},
										{
											"type": "reference",
											"name": "APIGuildMember",
											"qualifiedName": "APIGuildMember",
											"package": "discord-api-types"
										}
									]
								}
							],
							"name": "Nullish"
						}
					}
				},
				{
					"id": 203,
					"name": "message",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 46,
							"character": 15,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L46"
						}
					],
					"getSignature": {
						"id": 204,
						"name": "message",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Getting the Message object. Crashes if module type is\r\nCommandType.Slash or the event fired in a Both command was\r\nChatInputCommandInteraction"
								}
							]
						},
						"type": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "boolean"
								}
							],
							"name": "Message",
							"qualifiedName": "Message",
							"package": "discord.js"
						}
					}
				},
				{
					"id": 211,
					"name": "user",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 76,
							"character": 15,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L76"
						}
					],
					"getSignature": {
						"id": 212,
						"name": "user",
						"kind": 524288,
						"kindString": "Get signature",
						"flags": {},
						"type": {
							"type": "reference",
							"name": "User",
							"qualifiedName": "User",
							"package": "discord.js"
						}
					}
				},
				{
					"id": 225,
					"name": "isEmpty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 142,
							"character": 11,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L142"
						}
					],
					"signatures": [
						{
							"id": 226,
							"name": "isEmpty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 227,
					"name": "reply",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 147,
							"character": 11,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L147"
						}
					],
					"signatures": [
						{
							"id": 228,
							"name": "reply",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 229,
									"name": "content",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "InteractionReplyOptions",
														"qualifiedName": "InteractionReplyOptions",
														"package": "discord.js"
													},
													{
														"type": "literal",
														"value": "fetchReply"
													}
												],
												"name": "Omit",
												"qualifiedName": "Omit",
												"package": "typescript"
											},
											{
												"type": "reference",
												"name": "ReplyMessageOptions",
												"qualifiedName": "ReplyMessageOptions",
												"package": "discord.js"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Message",
										"qualifiedName": "Message",
										"package": "discord.js"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 196,
					"name": "wrap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/context.ts",
							"line": 134,
							"character": 11,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L134"
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "wrap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 198,
									"name": "wrappable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Message",
												"qualifiedName": "Message",
												"package": "discord.js"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "CacheType",
														"qualifiedName": "CacheType",
														"package": "discord.js"
													}
												],
												"name": "ChatInputCommandInteraction",
												"qualifiedName": "ChatInputCommandInteraction",
												"package": "discord.js"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 195,
								"name": "default"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						199
					]
				},
				{
					"title": "Accessors",
					"children": [
						209,
						221,
						213,
						215,
						217,
						207,
						223,
						205,
						219,
						203,
						211
					]
				},
				{
					"title": "Methods",
					"children": [
						225,
						227,
						196
					]
				}
			],
			"sources": [
				{
					"fileName": "src/handler/structures/context.ts",
					"line": 31,
					"character": 21,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/context.ts#L31"
				}
			]
		},
		{
			"id": 25,
			"name": "SernEmitter",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 64,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 74,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 65,
							"name": "new SernEmitter",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 66,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "EventEmitterOptions",
										"qualifiedName": "EventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 25,
								"name": "SernEmitter"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 61,
					"name": "captureRejectionSymbol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 291,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 61,
							"name": "captureRejectionSymbol",
							"qualifiedName": "EventEmitter.captureRejectionSymbol",
							"package": "@types/node"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 62,
					"name": "captureRejections",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets or gets the default captureRejection value for all emitters."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 296,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 63,
					"name": "defaultMaxListeners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 297,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 60,
					"name": "errorMonitor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This symbol shall be used to install a listener for only monitoring "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": "\nevents. Listeners installed using this symbol are called before the regular\n"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " event is emitted, therefore the process will still crash if no\nregular "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listener is installed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 290,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 60,
							"name": "errorMonitor",
							"qualifiedName": "EventEmitter.errorMonitor",
							"package": "@types/node"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 88,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 317,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 89,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.on(eventName, listener)`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 90,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 91,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 92,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 317,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 93,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 94,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 25,
								"name": "SernEmitter"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 83,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/sernEmitter.ts",
							"line": 32,
							"character": 20,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sernEmitter.ts#L32"
						}
					],
					"signatures": [
						{
							"id": 84,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Listening to sern events with on. This event stays on until a crash or a normal exit"
									}
								]
							},
							"typeParameter": [
								{
									"id": 85,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 189,
											"name": "SernEventsMapping"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 86,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 85,
										"name": "T"
									}
								},
								{
									"id": 87,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the arguments for emitting the  { eventName }"
											}
										]
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 85,
											"name": "T"
										},
										"objectType": {
											"type": "reference",
											"id": 189,
											"name": "SernEventsMapping"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.emit"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 140,
					"name": "eventNames",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 632,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 141,
							"name": "eventNames",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 115,
					"name": "getMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 489,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 116,
							"name": "getMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners",
										"target": 63
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 123,
					"name": "listenerCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 579,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 124,
							"name": "listenerCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening to the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 125,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 117,
					"name": "listeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 502,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 118,
							"name": "listeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 119,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function",
									"qualifiedName": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 102,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 462,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 103,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.removeListener()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.0.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 104,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 105,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 106,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 462,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 107,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 108,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 25,
								"name": "SernEmitter"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 67,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/sernEmitter.ts",
							"line": 10,
							"character": 20,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sernEmitter.ts#L10"
						}
					],
					"signatures": [
						{
							"id": 68,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Listening to sern events with on. This event stays on until a crash or a normal exit"
									}
								]
							},
							"typeParameter": [
								{
									"id": 69,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 189,
											"name": "SernEventsMapping"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 70,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 69,
										"name": "T"
									}
								},
								{
									"id": 71,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "what to do with the data"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 72,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/sernEmitter.ts",
													"line": 12,
													"character": 18,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sernEmitter.ts#L12"
												}
											],
											"signatures": [
												{
													"id": 73,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 74,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"id": 69,
																		"name": "T"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 189,
																		"name": "SernEventsMapping"
																	}
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 25,
								"name": "SernEmitter"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.on"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 75,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/handler/sernEmitter.ts",
							"line": 21,
							"character": 20,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sernEmitter.ts#L21"
						}
					],
					"signatures": [
						{
							"id": 76,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Listening to sern events with on. This event stays on until a crash or a normal exit"
									}
								]
							},
							"typeParameter": [
								{
									"id": 77,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 189,
											"name": "SernEventsMapping"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 78,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 77,
										"name": "T"
									}
								},
								{
									"id": 79,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "what to do with the data"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 80,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/sernEmitter.ts",
													"line": 23,
													"character": 18,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sernEmitter.ts#L23"
												}
											],
											"signatures": [
												{
													"id": 81,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 82,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"id": 77,
																		"name": "T"
																	},
																	"objectType": {
																		"type": "reference",
																		"id": 189,
																		"name": "SernEventsMapping"
																	}
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 25,
								"name": "SernEmitter"
							},
							"overwrites": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 126,
					"name": "prependListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 597,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 127,
							"name": "prependListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the _beginning_ of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 128,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 129,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 130,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 597,
													"character": 70
												}
											],
											"signatures": [
												{
													"id": 131,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 132,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 25,
								"name": "SernEmitter"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 133,
					"name": "prependOnceListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 613,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 134,
							"name": "prependOnceListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " to the_beginning_ of the listeners array. The next time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 135,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 136,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 137,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 613,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 138,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 139,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 25,
								"name": "SernEmitter"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 120,
					"name": "rawListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 532,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 121,
							"name": "rawListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 122,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function",
									"qualifiedName": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 109,
					"name": "removeAllListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 473,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 110,
							"name": "removeAllListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes all listeners, or those of the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 111,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 25,
								"name": "SernEmitter"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 95,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 457,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 96,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the specified "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " from the listener array for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", then "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`removeAllListeners()`"
									},
									{
										"kind": "text",
										"text": " calls _after_ emitting and_before_ the last listener finishes execution will\nnot remove them from"
									},
									{
										"kind": "code",
										"text": "`emit()`"
									},
									{
										"kind": "text",
										"text": " in progress. Subsequent events behave as expected.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
									},
									{
										"kind": "code",
										"text": "`emitter.listeners()`"
									},
									{
										"kind": "text",
										"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove the most\nrecently added instance. In the example the "
									},
									{
										"kind": "code",
										"text": "`once('ping')`"
									},
									{
										"kind": "text",
										"text": "listener is removed:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 97,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 98,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 99,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/@types/node/events.d.ts",
													"line": 457,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 100,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 101,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 25,
								"name": "SernEmitter"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 112,
					"name": "setMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 483,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 113,
							"name": "setMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 114,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 25,
								"name": "SernEmitter"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 52,
					"name": "getEventListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 262,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "getEventListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.listeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 54,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "EventEmitter",
												"qualifiedName": "global.NodeJS.EventEmitter",
												"package": "@types/node"
											},
											{
												"type": "reference",
												"name": "DOMEventTarget",
												"qualifiedName": "DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 55,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Function",
									"qualifiedName": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 48,
					"name": "listenerCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 234,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 49,
							"name": "listenerCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A class method that returns the number of listeners for the given "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "registered on the given "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.12"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v3.2.0 - Use "
											},
											{
												"kind": "code",
												"text": "`listenerCount`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 50,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The emitter to query"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "EventEmitter",
										"qualifiedName": "global.NodeJS.EventEmitter",
										"package": "@types/node"
									}
								},
								{
									"id": 51,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 39,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 217,
							"character": 15
						},
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 194,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 40,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns an "
									},
									{
										"kind": "code",
										"text": "`AsyncIterator`"
									},
									{
										"kind": "text",
										"text": " that iterates "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " events. It will throw\nif the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ". It removes all listeners when\nexiting the loop. The "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting on events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.16.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events emitted by the "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 41,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "EventEmitter",
										"qualifiedName": "global.NodeJS.EventEmitter",
										"package": "@types/node"
									}
								},
								{
									"id": 42,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 43,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions",
										"qualifiedName": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"qualifiedName": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.on"
							}
						},
						{
							"id": 44,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 45,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "ClientEvents",
											"qualifiedName": "ClientEvents",
											"package": "discord.js"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 46,
									"name": "eventEmitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Client",
										"qualifiedName": "Client",
										"package": "discord.js"
									}
								},
								{
									"id": 47,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 45,
										"name": "K",
										"qualifiedName": "K",
										"package": "discord.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 45,
											"name": "K",
											"qualifiedName": "K",
											"package": "discord.js"
										},
										"objectType": {
											"type": "reference",
											"name": "ClientEvents",
											"qualifiedName": "ClientEvents",
											"package": "discord.js"
										}
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								],
								"name": "AsyncIterator",
								"qualifiedName": "AsyncIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 26,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 157,
							"character": 15
						},
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 158,
							"character": 15
						},
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 193,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 27,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that is fulfilled when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits the given\nevent or that is rejected if the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " while waiting.\nThe "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event\nsemantics and does not listen to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe special handling of the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is only used when "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": "is used to wait for another event. If "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": " is used to wait for the\n'"
									},
									{
										"kind": "code",
										"text": "`error'`"
									},
									{
										"kind": "text",
										"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting for the event:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.13.0, v10.16.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 28,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "NodeEventTarget",
										"qualifiedName": "NodeEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 29,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 30,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions",
										"qualifiedName": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 31,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 32,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"name": "DOMEventTarget",
										"qualifiedName": "DOMEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 33,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "StaticEventEmitterOptions",
										"qualifiedName": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 35,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 36,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "ClientEvents",
											"qualifiedName": "ClientEvents",
											"package": "discord.js"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 37,
									"name": "eventEmitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Client",
										"qualifiedName": "Client",
										"package": "discord.js"
									}
								},
								{
									"id": 38,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 36,
										"name": "K",
										"qualifiedName": "K",
										"package": "discord.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 36,
											"name": "K",
											"qualifiedName": "K",
											"package": "discord.js"
										},
										"objectType": {
											"type": "reference",
											"name": "ClientEvents",
											"qualifiedName": "ClientEvents",
											"package": "discord.js"
										}
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 56,
					"name": "setMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 280,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "setMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.4.0"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 58,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative number. The maximum number of listeners per "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": " event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 59,
									"name": "eventTargets",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"name": "EventEmitter",
													"qualifiedName": "global.NodeJS.EventEmitter",
													"package": "@types/node"
												},
												{
													"type": "reference",
													"name": "DOMEventTarget",
													"qualifiedName": "DOMEventTarget",
													"package": "@types/node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "EventEmitter.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						64
					]
				},
				{
					"title": "Properties",
					"children": [
						61,
						62,
						63,
						60
					]
				},
				{
					"title": "Methods",
					"children": [
						88,
						83,
						140,
						115,
						123,
						117,
						102,
						67,
						75,
						126,
						133,
						120,
						109,
						95,
						112,
						52,
						48,
						39,
						26,
						56
					]
				}
			],
			"sources": [
				{
					"fileName": "src/handler/sernEmitter.ts",
					"line": 4,
					"character": 6,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sernEmitter.ts#L4"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "EventEmitter",
					"qualifiedName": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 315,
			"name": "Controller",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 316,
					"name": "next",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/handler/plugins/plugin.ts",
							"line": 29,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L29"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 317,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 29,
									"character": 10,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L29"
								}
							],
							"signatures": [
								{
									"id": 318,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Ok",
										"qualifiedName": "Ok",
										"package": "ts-results"
									}
								}
							]
						}
					}
				},
				{
					"id": 319,
					"name": "stop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/handler/plugins/plugin.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L30"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 320,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 30,
									"character": 10,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L30"
								}
							],
							"signatures": [
								{
									"id": 321,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Err",
										"qualifiedName": "Err",
										"package": "ts-results"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						316,
						319
					]
				}
			],
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 28,
					"character": 17,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L28"
				}
			]
		},
		{
			"id": 265,
			"name": "Wrapper",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object to be passed into init function."
					}
				]
			},
			"children": [
				{
					"id": 266,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/wrapper.ts",
							"line": 10,
							"character": 13,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L10"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Client",
						"qualifiedName": "Client",
						"package": "discord.js"
					}
				},
				{
					"id": 269,
					"name": "commands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/wrapper.ts",
							"line": 13,
							"character": 13,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 268,
					"name": "defaultPrefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/wrapper.ts",
							"line": 12,
							"character": 13,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 270,
					"name": "events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/wrapper.ts",
							"line": 14,
							"character": 13,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L14"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 271,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 273,
												"name": "absPath",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "src/handler/structures/wrapper.ts",
														"line": 16,
														"character": 30,
														"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L16"
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 272,
												"name": "mod",
												"kind": 1024,
												"kindString": "Property",
												"flags": {},
												"sources": [
													{
														"fileName": "src/handler/structures/wrapper.ts",
														"line": 16,
														"character": 12,
														"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L16"
													}
												],
												"type": {
													"type": "reference",
													"name": "EventModule"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													273,
													272
												]
											}
										],
										"sources": [
											{
												"fileName": "src/handler/structures/wrapper.ts",
												"line": 16,
												"character": 10,
												"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L16"
											}
										]
									}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 274,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/wrapper.ts",
											"line": 17,
											"character": 11,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L17"
										}
									],
									"signatures": [
										{
											"id": 275,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 276,
														"name": "__type",
														"kind": 65536,
														"kindString": "Type literal",
														"flags": {},
														"children": [
															{
																"id": 278,
																"name": "absPath",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/handler/structures/wrapper.ts",
																		"line": 17,
																		"character": 37,
																		"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L17"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 277,
																"name": "mod",
																"kind": 1024,
																"kindString": "Property",
																"flags": {},
																"sources": [
																	{
																		"fileName": "src/handler/structures/wrapper.ts",
																		"line": 17,
																		"character": 19,
																		"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L17"
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "EventModule"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	278,
																	277
																]
															}
														],
														"sources": [
															{
																"fileName": "src/handler/structures/wrapper.ts",
																"line": 17,
																"character": 17,
																"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L17"
															}
														]
													}
												}
											}
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 267,
					"name": "sernEmitter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/handler/structures/wrapper.ts",
							"line": 11,
							"character": 13,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"id": 25,
						"name": "SernEmitter"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						266,
						269,
						268,
						270,
						267
					]
				}
			],
			"sources": [
				{
					"fileName": "src/handler/structures/wrapper.ts",
					"line": 9,
					"character": 10,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/wrapper.ts#L9"
				}
			]
		},
		{
			"id": 146,
			"name": "Args",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 11,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L11"
				}
			],
			"type": {
				"type": "reference",
				"id": 144,
				"typeArguments": [
					{
						"type": "reflection",
						"declaration": {
							"id": 147,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 149,
									"name": "slash",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/types/handler.ts",
											"line": 11,
											"character": 47,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L11"
										}
									],
									"type": {
										"type": "reference",
										"id": 150,
										"name": "SlashOptions"
									}
								},
								{
									"id": 148,
									"name": "text",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/types/handler.ts",
											"line": 11,
											"character": 31,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L11"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										149,
										148
									]
								}
							],
							"sources": [
								{
									"fileName": "src/types/handler.ts",
									"line": 11,
									"character": 29,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L11"
								}
							]
						}
					}
				],
				"name": "ParseType"
			}
		},
		{
			"id": 363,
			"name": "AutocompletePlugin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 92,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L92"
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BaseModule"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 364,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 366,
									"name": "execute",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 96,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L96"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 367,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 96,
													"character": 17,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L96"
												}
											],
											"signatures": [
												{
													"id": 368,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 369,
															"name": "autocmp",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "AutocompleteInteraction",
																"qualifiedName": "AutocompleteInteraction",
																"package": "discord.js"
															}
														},
														{
															"id": 370,
															"name": "controlller",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 315,
																"name": "Controller"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Result",
																"qualifiedName": "Result",
																"package": "ts-results"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								},
								{
									"id": 365,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 95,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L95"
										}
									],
									"type": {
										"type": "reference",
										"id": 310,
										"name": "PluginType.Event"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										366,
										365
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 94,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L94"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 281,
			"name": "BaseOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Type that replaces autocomplete with "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "SernAutocompleteData",
						"target": 282
					}
				]
			},
			"sources": [
				{
					"fileName": "src/handler/structures/module.ts",
					"line": 181,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L181"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "ApplicationCommandChoicesData",
						"qualifiedName": "ApplicationCommandChoicesData",
						"package": "discord.js"
					},
					{
						"type": "reference",
						"name": "ApplicationCommandNonOptionsData",
						"qualifiedName": "ApplicationCommandNonOptionsData",
						"package": "discord.js"
					},
					{
						"type": "reference",
						"name": "ApplicationCommandChannelOptionData",
						"qualifiedName": "ApplicationCommandChannelOptionData",
						"package": "discord.js"
					},
					{
						"type": "reference",
						"name": "ApplicationCommandNumericOptionData",
						"qualifiedName": "ApplicationCommandNumericOptionData",
						"package": "discord.js"
					},
					{
						"type": "reference",
						"name": "ApplicationCommandAttachmentOption",
						"qualifiedName": "ApplicationCommandAttachmentOption",
						"package": "discord.js"
					},
					{
						"type": "reference",
						"id": 282,
						"name": "SernAutocompleteData"
					}
				]
			}
		},
		{
			"id": 252,
			"name": "BothCommand",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/structures/module.ts",
					"line": 55,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L55"
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BaseModule"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 253,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 257,
									"name": "alias",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 61,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L61"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 259,
									"name": "execute",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 63,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L63"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 260,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/structures/module.ts",
													"line": 63,
													"character": 17,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L63"
												}
											],
											"signatures": [
												{
													"id": 261,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 262,
															"name": "ctx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 195,
																"name": "Context"
															}
														},
														{
															"id": 263,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 146,
																"name": "Args"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																]
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								},
								{
									"id": 255,
									"name": "onEvent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 59,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L59"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 371,
											"typeArguments": [
												{
													"type": "reference",
													"id": 298,
													"name": "CommandType.Both"
												}
											],
											"name": "EventPlugin"
										}
									}
								},
								{
									"id": 258,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 62,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L62"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 279,
											"name": "SernOptionsData"
										}
									}
								},
								{
									"id": 256,
									"name": "plugins",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 60,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L60"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 322,
											"name": "CommandPlugin"
										}
									}
								},
								{
									"id": 254,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 58,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L58"
										}
									],
									"type": {
										"type": "reference",
										"id": 298,
										"name": "CommandType.Both"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										257,
										259,
										255,
										258,
										256,
										254
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/structures/module.ts",
									"line": 57,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L57"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 408,
			"name": "CommandModuleNoPlugins",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 145,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L145"
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "T",
				"parameterType": {
					"type": "reference",
					"id": 295,
					"name": "CommandType"
				},
				"templateType": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"name": "T"
							},
							"objectType": {
								"type": "reference",
								"name": "CommandModuleDefs"
							}
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "plugins"
								},
								{
									"type": "literal",
									"value": "onEvent"
								}
							]
						}
					],
					"name": "Omit",
					"qualifiedName": "Omit",
					"package": "typescript"
				}
			}
		},
		{
			"id": 422,
			"name": "CommandModulePlugin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 173,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L173"
				}
			],
			"typeParameters": [
				{
					"id": 423,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 295,
						"name": "CommandType"
					}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 371,
						"typeArguments": [
							{
								"type": "reference",
								"id": 423,
								"name": "T"
							}
						],
						"name": "EventPlugin"
					},
					{
						"type": "reference",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"id": 423,
								"name": "T"
							}
						],
						"name": "CommandPlugin"
					}
				]
			}
		},
		{
			"id": 322,
			"name": "CommandPlugin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 40,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L40"
				}
			],
			"typeParameters": [
				{
					"id": 334,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"name": "CommandModuleDefs"
						}
					},
					"default": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"name": "CommandModuleDefs"
						}
					}
				}
			],
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "reference",
					"id": 334,
					"name": "T"
				},
				"objectType": {
					"type": "mapped",
					"parameter": "K",
					"parameterType": {
						"type": "reference",
						"id": 334,
						"name": "T"
					},
					"templateType": {
						"type": "reference",
						"id": 151,
						"typeArguments": [
							{
								"type": "reference",
								"name": "BasePlugin"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 323,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 325,
											"name": "execute",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 45,
													"character": 12,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L45"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 326,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/handler/plugins/plugin.ts",
															"line": 45,
															"character": 21,
															"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L45"
														}
													],
													"signatures": [
														{
															"id": 327,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 328,
																	"name": "wrapper",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 265,
																		"name": "Wrapper"
																	}
																},
																{
																	"id": 329,
																	"name": "payload",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 330,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 332,
																					"name": "absPath",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/handler/plugins/plugin.ts",
																							"line": 49,
																							"character": 20,
																							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L49"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 331,
																					"name": "mod",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "src/handler/plugins/plugin.ts",
																							"line": 48,
																							"character": 20,
																							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L48"
																						}
																					],
																					"type": {
																						"type": "reference",
																						"id": 154,
																						"typeArguments": [
																							{
																								"type": "indexedAccess",
																								"indexType": {
																									"type": "reference",
																									"id": 334,
																									"name": "T"
																								},
																								"objectType": {
																									"type": "reference",
																									"name": "CommandModuleDefs"
																								}
																							},
																							{
																								"type": "union",
																								"types": [
																									{
																										"type": "literal",
																										"value": "name"
																									},
																									{
																										"type": "literal",
																										"value": "description"
																									}
																								]
																							}
																						],
																						"name": "DefinitelyDefined"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						332,
																						331
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "src/handler/plugins/plugin.ts",
																					"line": 47,
																					"character": 25,
																					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L47"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 333,
																	"name": "controller",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 315,
																		"name": "Controller"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "intrinsic",
																				"name": "void"
																			}
																		],
																		"name": "Result",
																		"qualifiedName": "Result",
																		"package": "ts-results"
																	}
																],
																"name": "Awaitable",
																"qualifiedName": "Awaitable",
																"package": "discord.js"
															}
														}
													]
												}
											}
										},
										{
											"id": 324,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 44,
													"character": 12,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L44"
												}
											],
											"type": {
												"type": "reference",
												"id": 309,
												"name": "PluginType.Command"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												325,
												324
											]
										}
									],
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 43,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L43"
										}
									]
								}
							}
						],
						"name": "Override"
					}
				}
			}
		},
		{
			"id": 179,
			"name": "DefinedCommandModule",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 48,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L48"
				}
			],
			"type": {
				"type": "reference",
				"id": 154,
				"typeArguments": [
					{
						"type": "reference",
						"name": "CommandModule"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "name"
							},
							{
								"type": "literal",
								"value": "description"
							}
						]
					}
				],
				"name": "DefinitelyDefined"
			}
		},
		{
			"id": 180,
			"name": "DefinedEventModule",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 49,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L49"
				}
			],
			"type": {
				"type": "reference",
				"id": 154,
				"typeArguments": [
					{
						"type": "reference",
						"name": "EventModule"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "name"
							},
							{
								"type": "literal",
								"value": "description"
							}
						]
					}
				],
				"name": "DefinitelyDefined"
			}
		},
		{
			"id": 178,
			"name": "DefinedModule",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "After modules are transformed, name and description are given default values if none\r\nare provided to Module. This type represents that transformation"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 47,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L47"
				}
			],
			"type": {
				"type": "reference",
				"id": 154,
				"typeArguments": [
					{
						"type": "reference",
						"id": 264,
						"name": "Module"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "name"
							},
							{
								"type": "literal",
								"value": "description"
							}
						]
					}
				],
				"name": "DefinitelyDefined"
			}
		},
		{
			"id": 154,
			"name": "DefinitelyDefined",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L18"
				}
			],
			"typeParameters": [
				{
					"id": 155,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 156,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"id": 155,
							"name": "T"
						}
					},
					"default": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"id": 155,
							"name": "T"
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "mapped",
						"parameter": "L",
						"parameterType": {
							"type": "reference",
							"id": 156,
							"name": "K"
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "L"
								},
								"objectType": {
									"type": "reference",
									"id": 155,
									"name": "T"
								}
							},
							"extendsType": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"qualifiedName": "Record",
								"package": "typescript"
							},
							"trueType": {
								"type": "reference",
								"id": 154,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "L"
										},
										"objectType": {
											"type": "reference",
											"id": 155,
											"name": "T"
										}
									},
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"name": "L"
											},
											"objectType": {
												"type": "reference",
												"id": 155,
												"name": "T"
											}
										}
									}
								],
								"name": "DefinitelyDefined"
							},
							"falseType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "L"
								},
								"objectType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 155,
											"name": "T"
										}
									],
									"name": "Required",
									"qualifiedName": "Required",
									"package": "typescript"
								}
							}
						},
						"optionalModifier": "-"
					},
					{
						"type": "reference",
						"id": 155,
						"name": "T"
					}
				]
			}
		},
		{
			"id": 335,
			"name": "DiscordEmitterPlugin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 57,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L57"
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BasePlugin"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 336,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 338,
									"name": "execute",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 61,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L61"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 339,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 61,
													"character": 17,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L61"
												}
											],
											"signatures": [
												{
													"id": 340,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 341,
															"name": "wrapper",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Client",
																"qualifiedName": "Client",
																"package": "discord.js"
															}
														},
														{
															"id": 342,
															"name": "module",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 154,
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "DiscordEventCommand"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "name"
																			},
																			{
																				"type": "literal",
																				"value": "description"
																			}
																		]
																	}
																],
																"name": "DefinitelyDefined"
															}
														},
														{
															"id": 343,
															"name": "controller",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 315,
																"name": "Controller"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Result",
																"qualifiedName": "Result",
																"package": "ts-results"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								},
								{
									"id": 337,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 60,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L60"
										}
									],
									"type": {
										"type": "reference",
										"id": 309,
										"name": "PluginType.Command"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										338,
										337
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 59,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L59"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 398,
			"name": "DiscordEventPlugin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 136,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L136"
				}
			],
			"typeParameters": [
				{
					"id": 407,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"name": "ClientEvents",
							"qualifiedName": "ClientEvents",
							"package": "discord.js"
						}
					},
					"default": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"name": "ClientEvents",
							"qualifiedName": "ClientEvents",
							"package": "discord.js"
						}
					}
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BasePlugin"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 399,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 402,
									"name": "execute",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 141,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L141"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 403,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 141,
													"character": 17,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L141"
												}
											],
											"signatures": [
												{
													"id": 404,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 405,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 407,
																	"name": "T"
																},
																"objectType": {
																	"type": "reference",
																	"name": "ClientEvents",
																	"qualifiedName": "ClientEvents",
																	"package": "discord.js"
																}
															}
														},
														{
															"id": 406,
															"name": "controller",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 315,
																"name": "Controller"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Result",
																"qualifiedName": "Result",
																"package": "ts-results"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								},
								{
									"id": 400,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 139,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L139"
										}
									],
									"type": {
										"type": "reference",
										"id": 407,
										"name": "T"
									}
								},
								{
									"id": 401,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 140,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L140"
										}
									],
									"type": {
										"type": "reference",
										"id": 310,
										"name": "PluginType.Event"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										402,
										400,
										401
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 138,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L138"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 157,
			"name": "EventInput",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 24,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L24"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 158,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"children": [
									{
										"id": 160,
										"name": "absPath",
										"kind": 1024,
										"kindString": "Property",
										"flags": {},
										"sources": [
											{
												"fileName": "src/types/handler.ts",
												"line": 26,
												"character": 26,
												"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L26"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 159,
										"name": "mod",
										"kind": 1024,
										"kindString": "Property",
										"flags": {},
										"sources": [
											{
												"fileName": "src/types/handler.ts",
												"line": 26,
												"character": 8,
												"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L26"
											}
										],
										"type": {
											"type": "reference",
											"name": "EventModule"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											160,
											159
										]
									}
								],
								"sources": [
									{
										"fileName": "src/types/handler.ts",
										"line": 26,
										"character": 6,
										"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L26"
									}
								]
							}
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 161,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/handler.ts",
									"line": 27,
									"character": 7,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L27"
								}
							],
							"signatures": [
								{
									"id": 162,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 163,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 165,
														"name": "absPath",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "src/types/handler.ts",
																"line": 27,
																"character": 33,
																"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L27"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 164,
														"name": "mod",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "src/types/handler.ts",
																"line": 27,
																"character": 15,
																"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L27"
															}
														],
														"type": {
															"type": "reference",
															"name": "EventModule"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															165,
															164
														]
													}
												],
												"sources": [
													{
														"fileName": "src/types/handler.ts",
														"line": 27,
														"character": 13,
														"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L27"
													}
												]
											}
										}
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 415,
			"name": "EventModuleCommandPluginDefs",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Event Module Command Plugins"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 163,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L163"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 416,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 417,
							"name": "1",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 164,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L164"
								}
							],
							"type": {
								"type": "reference",
								"id": 335,
								"name": "DiscordEmitterPlugin"
							}
						},
						{
							"id": 418,
							"name": "2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 165,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L165"
								}
							],
							"type": {
								"type": "reference",
								"id": 354,
								"name": "SernEmitterPlugin"
							}
						},
						{
							"id": 419,
							"name": "3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 166,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L166"
								}
							],
							"type": {
								"type": "reference",
								"id": 344,
								"name": "ExternalEmitterPlugin"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								417,
								418,
								419
							]
						}
					],
					"sources": [
						{
							"fileName": "src/handler/plugins/plugin.ts",
							"line": 163,
							"character": 43,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L163"
						}
					]
				}
			}
		},
		{
			"id": 410,
			"name": "EventModuleEventPluginDefs",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Event Module Event Plugins"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 154,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L154"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 411,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 412,
							"name": "1",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 155,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L155"
								}
							],
							"type": {
								"type": "reference",
								"id": 398,
								"name": "DiscordEventPlugin"
							}
						},
						{
							"id": 413,
							"name": "2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 156,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L156"
								}
							],
							"type": {
								"type": "reference",
								"id": 380,
								"name": "SernEventPlugin"
							}
						},
						{
							"id": 414,
							"name": "3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 157,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L157"
								}
							],
							"type": {
								"type": "reference",
								"id": 390,
								"name": "ExternalEventPlugin"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								412,
								413,
								414
							]
						}
					],
					"sources": [
						{
							"fileName": "src/handler/plugins/plugin.ts",
							"line": 154,
							"character": 41,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L154"
						}
					]
				}
			}
		},
		{
			"id": 420,
			"name": "EventModulePlugin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 169,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L169"
				}
			],
			"typeParameters": [
				{
					"id": 421,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 304,
						"name": "EventType"
					}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"id": 421,
							"name": "T"
						},
						"objectType": {
							"type": "reference",
							"id": 410,
							"name": "EventModuleEventPluginDefs"
						}
					},
					{
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"id": 421,
							"name": "T"
						},
						"objectType": {
							"type": "reference",
							"id": 415,
							"name": "EventModuleCommandPluginDefs"
						}
					}
				]
			}
		},
		{
			"id": 409,
			"name": "EventModulesNoPlugins",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 148,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L148"
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "T",
				"parameterType": {
					"type": "reference",
					"id": 304,
					"name": "EventType"
				},
				"templateType": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"name": "T"
							},
							"objectType": {
								"type": "reference",
								"name": "EventModuleDefs"
							}
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "plugins"
								},
								{
									"type": "literal",
									"value": "onEvent"
								}
							]
						}
					],
					"name": "Omit",
					"qualifiedName": "Omit",
					"package": "typescript"
				}
			}
		},
		{
			"id": 371,
			"name": "EventPlugin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 103,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L103"
				}
			],
			"typeParameters": [
				{
					"id": 379,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"name": "CommandModuleDefs"
						}
					},
					"default": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"name": "CommandModuleDefs"
						}
					}
				}
			],
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "reference",
					"id": 379,
					"name": "T"
				},
				"objectType": {
					"type": "mapped",
					"parameter": "K",
					"parameterType": {
						"type": "reference",
						"id": 379,
						"name": "T"
					},
					"templateType": {
						"type": "reference",
						"id": 151,
						"typeArguments": [
							{
								"type": "reference",
								"name": "BasePlugin"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 372,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 374,
											"name": "execute",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 108,
													"character": 12,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L108"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 375,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/handler/plugins/plugin.ts",
															"line": 108,
															"character": 21,
															"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L108"
														}
													],
													"signatures": [
														{
															"id": 376,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 377,
																	"name": "event",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "literal",
																					"value": "execute"
																				},
																				"objectType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "reference",
																						"name": "K"
																					},
																					"objectType": {
																						"type": "reference",
																						"name": "CommandModuleDefs"
																					}
																				}
																			}
																		],
																		"name": "Parameters",
																		"qualifiedName": "Parameters",
																		"package": "typescript"
																	}
																},
																{
																	"id": 378,
																	"name": "controller",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 315,
																		"name": "Controller"
																	}
																}
															],
															"type": {
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "intrinsic",
																				"name": "void"
																			}
																		],
																		"name": "Result",
																		"qualifiedName": "Result",
																		"package": "ts-results"
																	}
																],
																"name": "Awaitable",
																"qualifiedName": "Awaitable",
																"package": "discord.js"
															}
														}
													]
												}
											}
										},
										{
											"id": 373,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 107,
													"character": 12,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L107"
												}
											],
											"type": {
												"type": "reference",
												"id": 310,
												"name": "PluginType.Event"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												374,
												373
											]
										}
									],
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 106,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L106"
										}
									]
								}
							}
						],
						"name": "Override"
					}
				}
			}
		},
		{
			"id": 344,
			"name": "ExternalEmitterPlugin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 68,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L68"
				}
			],
			"typeParameters": [
				{
					"id": 353,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "EventEmitter",
						"qualifiedName": "EventEmitter",
						"package": "@types/node"
					},
					"default": {
						"type": "reference",
						"name": "EventEmitter",
						"qualifiedName": "EventEmitter",
						"package": "@types/node"
					}
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BasePlugin"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 345,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 347,
									"name": "execute",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 72,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L72"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 348,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 72,
													"character": 17,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L72"
												}
											],
											"signatures": [
												{
													"id": 349,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 350,
															"name": "wrapper",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 353,
																"name": "T"
															}
														},
														{
															"id": 351,
															"name": "module",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 154,
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "ExternalEventCommand"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "name"
																			},
																			{
																				"type": "literal",
																				"value": "description"
																			}
																		]
																	}
																],
																"name": "DefinitelyDefined"
															}
														},
														{
															"id": 352,
															"name": "controller",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 315,
																"name": "Controller"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Result",
																"qualifiedName": "Result",
																"package": "ts-results"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								},
								{
									"id": 346,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 71,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L71"
										}
									],
									"type": {
										"type": "reference",
										"id": 309,
										"name": "PluginType.Command"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										347,
										346
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 70,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L70"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 390,
			"name": "ExternalEventPlugin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 128,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L128"
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BasePlugin"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 391,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 393,
									"name": "execute",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 132,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L132"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 394,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 132,
													"character": 17,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L132"
												}
											],
											"signatures": [
												{
													"id": 395,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 396,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														},
														{
															"id": 397,
															"name": "controller",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 315,
																"name": "Controller"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Result",
																"qualifiedName": "Result",
																"package": "ts-results"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								},
								{
									"id": 392,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 131,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L131"
										}
									],
									"type": {
										"type": "reference",
										"id": 310,
										"name": "PluginType.Event"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										393,
										392
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 130,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L130"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 424,
			"name": "InputCommandModule",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "User inputs this type. Sern processes behind the scenes for better usage"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 178,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L178"
				}
			],
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "reference",
					"id": 295,
					"name": "CommandType"
				},
				"objectType": {
					"type": "mapped",
					"parameter": "T",
					"parameterType": {
						"type": "reference",
						"id": 295,
						"name": "CommandType"
					},
					"templateType": {
						"type": "intersection",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "T"
								},
								"objectType": {
									"type": "reference",
									"id": 408,
									"name": "CommandModuleNoPlugins"
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 425,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 426,
											"name": "plugins",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 179,
													"character": 54,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L179"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 422,
													"typeArguments": [
														{
															"type": "reference",
															"name": "T"
														}
													],
													"name": "CommandModulePlugin"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												426
											]
										}
									],
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 179,
											"character": 52,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L179"
										}
									]
								}
							}
						]
					}
				}
			}
		},
		{
			"id": 427,
			"name": "InputEventModule",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 182,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L182"
				}
			],
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "reference",
					"id": 304,
					"name": "EventType"
				},
				"objectType": {
					"type": "mapped",
					"parameter": "T",
					"parameterType": {
						"type": "reference",
						"id": 304,
						"name": "EventType"
					},
					"templateType": {
						"type": "intersection",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"name": "T"
								},
								"objectType": {
									"type": "reference",
									"id": 409,
									"name": "EventModulesNoPlugins"
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 428,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 429,
											"name": "plugins",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 183,
													"character": 51,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L183"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 420,
													"typeArguments": [
														{
															"type": "reference",
															"name": "T"
														}
													],
													"name": "EventModulePlugin"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												429
											]
										}
									],
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 183,
											"character": 49,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L183"
										}
									]
								}
							}
						]
					}
				}
			}
		},
		{
			"id": 168,
			"name": "IsOptional",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 31,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L31"
				}
			],
			"typeParameters": [
				{
					"id": 169,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "K",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"id": 169,
						"name": "T"
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"name": "K"
						},
						"objectType": {
							"type": "reference",
							"id": 169,
							"name": "T"
						}
					},
					"extendsType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"name": "K"
						},
						"objectType": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 169,
									"name": "T"
								}
							],
							"name": "Required",
							"qualifiedName": "Required",
							"package": "typescript"
						}
					},
					"trueType": {
						"type": "literal",
						"value": false
					},
					"falseType": {
						"type": "literal",
						"value": true
					}
				},
				"optionalModifier": "-"
			}
		},
		{
			"id": 264,
			"name": "Module",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/structures/module.ts",
					"line": 141,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L141"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"name": "CommandModule"
					},
					{
						"type": "reference",
						"name": "EventModule"
					}
				]
			}
		},
		{
			"id": 142,
			"name": "Nullish",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 4,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L4"
				}
			],
			"typeParameters": [
				{
					"id": 143,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 143,
						"name": "T"
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 151,
			"name": "Override",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 16,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L16"
				}
			],
			"typeParameters": [
				{
					"id": 152,
					"name": "T1",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 153,
					"name": "T2",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 152,
								"name": "T1"
							},
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 153,
									"name": "T2"
								}
							}
						],
						"name": "Omit",
						"qualifiedName": "Omit",
						"package": "typescript"
					},
					{
						"type": "reference",
						"id": 153,
						"name": "T2"
					}
				]
			}
		},
		{
			"id": 144,
			"name": "ParseType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 7,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L7"
				}
			],
			"typeParameters": [
				{
					"id": 145,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"id": 145,
						"name": "T"
					}
				},
				"objectType": {
					"type": "mapped",
					"parameter": "K",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"id": 145,
							"name": "T"
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"name": "K"
							},
							"objectType": {
								"type": "reference",
								"id": 145,
								"name": "T"
							}
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "unknown"
						},
						"trueType": {
							"type": "tuple",
							"elements": [
								{
									"type": "named-tuple-member",
									"name": "k",
									"isOptional": false,
									"element": {
										"type": "reference",
										"name": "K"
									}
								},
								{
									"type": "named-tuple-member",
									"name": "args",
									"isOptional": false,
									"element": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"id": 145,
											"name": "T"
										}
									}
								}
							]
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				}
			}
		},
		{
			"id": 181,
			"name": "Payload",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 50,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L50"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 182,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 184,
									"name": "module",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/types/handler.ts",
											"line": 51,
											"character": 35,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L51"
										}
									],
									"type": {
										"type": "reference",
										"id": 264,
										"name": "Module"
									}
								},
								{
									"id": 183,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/types/handler.ts",
											"line": 51,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L51"
										}
									],
									"type": {
										"type": "reference",
										"id": 312,
										"name": "PayloadType.Success"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										184,
										183
									]
								}
							],
							"sources": [
								{
									"fileName": "src/types/handler.ts",
									"line": 51,
									"character": 6,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L51"
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 185,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 187,
									"name": "module",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/types/handler.ts",
											"line": 52,
											"character": 35,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L52"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 264,
												"name": "Module"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 188,
									"name": "reason",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/types/handler.ts",
											"line": 52,
											"character": 63,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L52"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 186,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/types/handler.ts",
											"line": 52,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L52"
										}
									],
									"type": {
										"type": "reference",
										"id": 313,
										"name": "PayloadType.Failure"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										187,
										188,
										186
									]
								}
							],
							"sources": [
								{
									"fileName": "src/types/handler.ts",
									"line": 52,
									"character": 6,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L52"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 166,
			"name": "Reconstruct",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 29,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L29"
				}
			],
			"typeParameters": [
				{
					"id": 167,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"id": 167,
					"name": "T"
				},
				"extendsType": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "inferred",
							"name": "O"
						},
						{
							"type": "intrinsic",
							"name": "never"
						}
					],
					"name": "Omit",
					"qualifiedName": "Omit",
					"package": "typescript"
				},
				"trueType": {
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"name": "O"
						},
						{
							"type": "reference",
							"id": 166,
							"typeArguments": [
								{
									"type": "reference",
									"name": "O"
								}
							],
							"name": "Reconstruct"
						}
					]
				},
				"falseType": {
					"type": "reference",
					"id": 167,
					"name": "T"
				}
			}
		},
		{
			"id": 282,
			"name": "SernAutocompleteData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/structures/module.ts",
					"line": 166,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L166"
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BaseApplicationCommandOptionsData",
						"qualifiedName": "BaseApplicationCommandOptionsData",
						"package": "discord.js"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 283,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 284,
									"name": "autocomplete",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 169,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L169"
										}
									],
									"type": {
										"type": "literal",
										"value": true
									}
								},
								{
									"id": 286,
									"name": "command",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 174,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L174"
										}
									],
									"type": {
										"type": "reference",
										"name": "AutocompleteCommand"
									}
								},
								{
									"id": 285,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 170,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L170"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "ApplicationCommandOptionType.String",
												"qualifiedName": "ApplicationCommandOptionType.String",
												"package": "discord-api-types"
											},
											{
												"type": "reference",
												"name": "ApplicationCommandOptionType.Number",
												"qualifiedName": "ApplicationCommandOptionType.Number",
												"package": "discord-api-types"
											},
											{
												"type": "reference",
												"name": "ApplicationCommandOptionType.Integer",
												"qualifiedName": "ApplicationCommandOptionType.Integer",
												"package": "discord-api-types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										284,
										286,
										285
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/structures/module.ts",
									"line": 168,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L168"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 354,
			"name": "SernEmitterPlugin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 80,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L80"
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BasePlugin"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 355,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 357,
									"name": "execute",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 84,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L84"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 358,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 84,
													"character": 17,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L84"
												}
											],
											"signatures": [
												{
													"id": 359,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 360,
															"name": "wrapper",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 25,
																"name": "SernEmitter"
															}
														},
														{
															"id": 361,
															"name": "module",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 154,
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "SernEventCommand"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "name"
																			},
																			{
																				"type": "literal",
																				"value": "description"
																			}
																		]
																	}
																],
																"name": "DefinitelyDefined"
															}
														},
														{
															"id": 362,
															"name": "controller",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 315,
																"name": "Controller"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Result",
																"qualifiedName": "Result",
																"package": "ts-results"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								},
								{
									"id": 356,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 83,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L83"
										}
									],
									"type": {
										"type": "reference",
										"id": 309,
										"name": "PluginType.Command"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										357,
										356
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 82,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L82"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 380,
			"name": "SernEventPlugin",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/plugins/plugin.ts",
					"line": 116,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L116"
				}
			],
			"typeParameters": [
				{
					"id": 389,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"id": 189,
							"name": "SernEventsMapping"
						}
					},
					"default": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"id": 189,
							"name": "SernEventsMapping"
						}
					}
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BasePlugin"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 381,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 384,
									"name": "execute",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 121,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L121"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 385,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/plugins/plugin.ts",
													"line": 121,
													"character": 17,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L121"
												}
											],
											"signatures": [
												{
													"id": 386,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 387,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 389,
																	"name": "T"
																},
																"objectType": {
																	"type": "reference",
																	"id": 189,
																	"name": "SernEventsMapping"
																}
															}
														},
														{
															"id": 388,
															"name": "controller",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 315,
																"name": "Controller"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Result",
																"qualifiedName": "Result",
																"package": "ts-results"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								},
								{
									"id": 382,
									"name": "name",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 119,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L119"
										}
									],
									"type": {
										"type": "reference",
										"id": 389,
										"name": "T"
									}
								},
								{
									"id": 383,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/plugins/plugin.ts",
											"line": 120,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L120"
										}
									],
									"type": {
										"type": "reference",
										"id": 310,
										"name": "PluginType.Event"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										384,
										382,
										383
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/plugins/plugin.ts",
									"line": 118,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/plugins/plugin.ts#L118"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 189,
			"name": "SernEventsMapping",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 53,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L53"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 190,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 193,
							"name": "error",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/handler.ts",
									"line": 56,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L56"
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Error",
												"qualifiedName": "Error",
												"package": "typescript"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								]
							}
						},
						{
							"id": 192,
							"name": "module.activate",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/handler.ts",
									"line": 55,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L55"
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"id": 181,
										"name": "Payload"
									}
								]
							}
						},
						{
							"id": 191,
							"name": "module.register",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/handler.ts",
									"line": 54,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L54"
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"id": 181,
										"name": "Payload"
									}
								]
							}
						},
						{
							"id": 194,
							"name": "warning",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/handler.ts",
									"line": 57,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L57"
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								193,
								192,
								191,
								194
							]
						}
					],
					"sources": [
						{
							"fileName": "src/types/handler.ts",
							"line": 53,
							"character": 32,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L53"
						}
					]
				}
			}
		},
		{
			"id": 279,
			"name": "SernOptionsData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/structures/module.ts",
					"line": 205,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L205"
				}
			],
			"typeParameters": [
				{
					"id": 280,
					"name": "U",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "ApplicationCommandOptionData",
						"qualifiedName": "ApplicationCommandOptionData",
						"package": "discord.js"
					},
					"default": {
						"type": "reference",
						"name": "ApplicationCommandOptionData",
						"qualifiedName": "ApplicationCommandOptionData",
						"package": "discord.js"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"id": 280,
					"name": "U"
				},
				"extendsType": {
					"type": "reference",
					"name": "ApplicationCommandSubCommandData",
					"qualifiedName": "ApplicationCommandSubCommandData",
					"package": "discord.js"
				},
				"trueType": {
					"type": "reference",
					"id": 287,
					"name": "SernSubCommandData"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"id": 280,
						"name": "U"
					},
					"extendsType": {
						"type": "reference",
						"name": "ApplicationCommandSubGroupData",
						"qualifiedName": "ApplicationCommandSubGroupData",
						"package": "discord.js"
					},
					"trueType": {
						"type": "reference",
						"id": 291,
						"name": "SernSubCommandGroupData"
					},
					"falseType": {
						"type": "reference",
						"id": 281,
						"name": "BaseOptions"
					}
				}
			}
		},
		{
			"id": 287,
			"name": "SernSubCommandData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/structures/module.ts",
					"line": 189,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L189"
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "BaseApplicationCommandOptionsData",
								"qualifiedName": "BaseApplicationCommandOptionsData",
								"package": "discord.js"
							},
							{
								"type": "literal",
								"value": "required"
							}
						],
						"name": "Omit",
						"qualifiedName": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 288,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 290,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 193,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L193"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 281,
											"name": "BaseOptions"
										}
									}
								},
								{
									"id": 289,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 192,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L192"
										}
									],
									"type": {
										"type": "reference",
										"name": "ApplicationCommandOptionType.Subcommand",
										"qualifiedName": "ApplicationCommandOptionType.Subcommand",
										"package": "discord-api-types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										290,
										289
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/structures/module.ts",
									"line": 191,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L191"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 291,
			"name": "SernSubCommandGroupData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/structures/module.ts",
					"line": 197,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L197"
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "BaseApplicationCommandOptionsData",
								"qualifiedName": "BaseApplicationCommandOptionsData",
								"package": "discord.js"
							},
							{
								"type": "literal",
								"value": "required"
							}
						],
						"name": "Omit",
						"qualifiedName": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 292,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 294,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 201,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L201"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 287,
											"name": "SernSubCommandData"
										}
									}
								},
								{
									"id": 293,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 200,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L200"
										}
									],
									"type": {
										"type": "reference",
										"name": "ApplicationCommandOptionType.SubcommandGroup",
										"qualifiedName": "ApplicationCommandOptionType.SubcommandGroup",
										"package": "discord-api-types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										294,
										293
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/structures/module.ts",
									"line": 199,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L199"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 230,
			"name": "SlashCommand",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/structures/module.ts",
					"line": 44,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L44"
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BaseModule"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 231,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 236,
									"name": "execute",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 51,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L51"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 237,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/structures/module.ts",
													"line": 51,
													"character": 17,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L51"
												}
											],
											"signatures": [
												{
													"id": 238,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 239,
															"name": "ctx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 195,
																"name": "Context"
															}
														},
														{
															"id": 240,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "slash"
																	},
																	{
																		"type": "reference",
																		"id": 150,
																		"name": "SlashOptions"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																]
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								},
								{
									"id": 233,
									"name": "onEvent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 48,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L48"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 371,
											"typeArguments": [
												{
													"type": "reference",
													"id": 297,
													"name": "CommandType.Slash"
												}
											],
											"name": "EventPlugin"
										}
									}
								},
								{
									"id": 235,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 50,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L50"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 279,
											"name": "SernOptionsData"
										}
									}
								},
								{
									"id": 234,
									"name": "plugins",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 49,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L49"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 322,
											"name": "CommandPlugin"
										}
									}
								},
								{
									"id": 232,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 47,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L47"
										}
									],
									"type": {
										"type": "reference",
										"id": 297,
										"name": "CommandType.Slash"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										236,
										233,
										235,
										234,
										232
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/structures/module.ts",
									"line": 46,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L46"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 150,
			"name": "SlashOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L13"
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"name": "CommandInteractionOptionResolver",
						"qualifiedName": "CommandInteractionOptionResolver",
						"package": "discord.js"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "getMessage"
							},
							{
								"type": "literal",
								"value": "getFocused"
							}
						]
					}
				],
				"name": "Omit",
				"qualifiedName": "Omit",
				"package": "typescript"
			}
		},
		{
			"id": 170,
			"name": "SpreadParams",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/types/handler.ts",
					"line": 39,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L39"
				}
			],
			"typeParameters": [
				{
					"id": 177,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 174,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/types/handler.ts",
									"line": 39,
									"character": 35,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L39"
								}
							],
							"signatures": [
								{
									"id": 175,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 176,
											"name": "args",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "intrinsic",
												"name": "never"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						}
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 171,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "src/types/handler.ts",
							"line": 39,
							"character": 66,
							"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/types/handler.ts#L39"
						}
					],
					"signatures": [
						{
							"id": 172,
							"name": "__type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Turns a function with a union of array of args into a single union\r\n [ T , V , B ] | [ A ] => T | V | B | A"
									}
								]
							},
							"parameters": [
								{
									"id": 173,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "intrinsic",
											"name": "number"
										},
										"objectType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 177,
													"name": "T"
												}
											],
											"name": "Parameters",
											"qualifiedName": "Parameters",
											"package": "typescript"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 241,
			"name": "TextCommand",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/structures/module.ts",
					"line": 33,
					"character": 12,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L33"
				}
			],
			"type": {
				"type": "reference",
				"id": 151,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BaseModule"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 242,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 246,
									"name": "alias",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 39,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L39"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 247,
									"name": "execute",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 40,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L40"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 248,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/handler/structures/module.ts",
													"line": 40,
													"character": 17,
													"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L40"
												}
											],
											"signatures": [
												{
													"id": 249,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 250,
															"name": "ctx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 195,
																"name": "Context"
															}
														},
														{
															"id": 251,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "text"
																	},
																	{
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																]
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								},
								{
									"id": 244,
									"name": "onEvent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 37,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L37"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 371,
											"typeArguments": [
												{
													"type": "reference",
													"id": 296,
													"name": "CommandType.Text"
												}
											],
											"name": "EventPlugin"
										}
									}
								},
								{
									"id": 245,
									"name": "plugins",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 38,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L38"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 322,
											"name": "CommandPlugin"
										}
									}
								},
								{
									"id": 243,
									"name": "type",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/handler/structures/module.ts",
											"line": 36,
											"character": 8,
											"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L36"
										}
									],
									"type": {
										"type": "reference",
										"id": 296,
										"name": "CommandType.Text"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										246,
										247,
										244,
										245,
										243
									]
								}
							],
							"sources": [
								{
									"fileName": "src/handler/structures/module.ts",
									"line": 35,
									"character": 4,
									"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/structures/module.ts#L35"
								}
							]
						}
					}
				],
				"name": "Override"
			}
		},
		{
			"id": 4,
			"name": "commandModule",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/sern.ts",
					"line": 86,
					"character": 16,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L86"
				}
			],
			"signatures": [
				{
					"id": 5,
					"name": "commandModule",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The wrapper function to define command modules for sern"
							}
						]
					},
					"parameters": [
						{
							"id": 6,
							"name": "mod",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 424,
								"name": "InputCommandModule"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "CommandModule"
					}
				}
			]
		},
		{
			"id": 1,
			"name": "eventModule",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/handler/sern.ts",
					"line": 107,
					"character": 16,
					"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/handler/sern.ts#L107"
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "eventModule",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The wrapper function to define event modules for sern"
							}
						]
					},
					"parameters": [
						{
							"id": 3,
							"name": "mod",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 427,
								"name": "InputEventModule"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "EventModule"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				7
			]
		},
		{
			"title": "Enumerations",
				"children": [
				295,
				304,
				311,
				308
			]
		},
		{
			"title": "Classes",
			"children": [
				195,
				25
			]
		},
		{
			"title": "Interfaces",
			"children": [
				315,
				265
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				146,
				363,
				281,
				252,
				408,
				422,
				322,
				179,
				180,
				178,
				154,
				335,
				398,
				157,
				415,
				410,
				420,
				409,
				371,
				344,
				390,
				424,
				427,
				168,
				264,
				142,
				151,
				144,
				181,
				166,
				282,
				354,
				380,
				189,
				279,
				287,
				291,
				230,
				150,
				170,
				241
			]
		},
		{
			"title": "Functions",
			"children": [
				4,
				1
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0,
			"url": "https://github.com/sern-handler/handler/blob/c0958c6/src/index.ts#L1"
		}
	]
}